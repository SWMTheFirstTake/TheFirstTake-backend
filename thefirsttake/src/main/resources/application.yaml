server:
  servlet:
    session:
      timeout: 6000m
    multipart:
      max-file-size: 10MB
      max-request-size: 20MB
  port: 8000

spring:
  jackson:
    property-naming-strategy: SNAKE_CASE
  redis:
    host: ${REDIS_ENDPOINT}
    # host: localhost
    port: 6379
  datasource:
    url: jdbc:postgresql://${POSTGRES_ENDPOINT}:5432/postgres?sslmode=require
    # url: jdbc:postgresql://localhost:5432/postgres
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
jpa:
  hibernate:
    ddl-auto: update   # create, create-drop, update, none ? ??
  show-sql: true       # ???? SQL ??? ????
  properties:
    hibernate:
      format_sql: true # SQL ?? ?? ??
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: "client-id"
            client-secret: "client-secret"
            # redirect-uri: "http://172.16.101.234:3000/api/auth/callback/kakao"
            redirect-uri: "https://the-second-take.com/api/auth/kakao/callback"  # 기존 프로덕션 값 (보존)
            # redirect-uri: "https://the-first-take.com/api/auth/callback/kakao"
            # redirect-uri: "http://localhost:8000/api/auth/kakao/callback"
#            redirect-uri: "http://localhost:3000/api/auth/callback/kakao"
#            redirect-uri: "http://localhost:5500/kakao-callback.html"
            authorization-grant-type: authorization_code
            client-name: Kakao
            scope: profile_nickname, account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
jwt:
  secret: ${JWT_SECRET:X9p$eTqN7#vF3@LmPz1!tUcRg*YkWqZ0oAsJdLxCvBnMhQeRfTgYhUjIkOlPnMbVcXsZaSdFgHiJkL11111}
  expiration: 900000  # 15분 (밀리초)

kakao:
  client-id: ${KAKAO_CLIENT_ID}
  client-secret: ${KAKAO_CLIENT_SECRET}
  redirect-uri: https://the-second-take.com/api/auth/kakao/callback
  # redirect-uri: https://the-first-take.com/api/auth/kakao/callback
  # redirect-uri: http://localhost:8000/api/auth/kakao/callback
llm:
  server:
    expert-single-url: ${LLM_SERVER_EXPERT_SINGLE_URL}
    expert-chain-url: ${LLM_SERVER_EXPERT_CHAIN_URL}
    expert-stream-url: ${LLM_SERVER_EXPERT_STREAM_URL}
ai:
  server:
    host: ${AI_SERVER_HOST}
    port: ${AI_SERVER_PORT}
cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region:
      static: ap-northeast-2  # 서울 리전
    s3:
      bucket: thefirsttake-file-upload
fitroom:
  api:
    key: ${FITROOM_API_KEY}

logging:
  level:
    com.thefirsttake.app.fitting: DEBUG

# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
    prometheus:
      enabled: true
  health:
    db:
      enabled: true
    redis:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        hikaricp.connections: true
        hikaricp.connections.active: true
        hikaricp.connections.idle: true
        hikaricp.connections.pending: true
        jvm.memory.used: true
        jvm.gc.pause: true
        sse.api.total.response.duration: true
        sse.api.memory.usage.bytes: true
    tags:
      application: thefirsttake
      service: chat-api